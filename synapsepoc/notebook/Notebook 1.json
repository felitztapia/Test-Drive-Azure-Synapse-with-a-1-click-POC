{
	"name": "Notebook 1",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "felitztapia",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "56g",
			"driverCores": 8,
			"executorMemory": "56g",
			"executorCores": 8,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "da0d1a9f-dd36-43b9-9d76-30aa1e232379"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/28100aed-fbc9-43b5-be58-aebd70043c6b/resourceGroups/MDC-Felix-RG/providers/Microsoft.Synapse/workspaces/ftr23m5xeeoklumapocws1/bigDataPools/felitztapia",
				"name": "felitztapia",
				"type": "Spark",
				"endpoint": "https://ftr23m5xeeoklumapocws1.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/felitztapia",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "2.4",
				"nodeCount": 10,
				"cores": 8,
				"memory": 56,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"tags": [
						"parameters"
					]
				},
				"source": [
					""
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false,
					"tags": []
				},
				"source": [
					"%%pyspark\r\n",
					"df = spark.read.load('abfss://data@pocsynapseadlseum.dfs.core.windows.net/parquet/small.parquet', format='parquet')\r\n",
					"display(df.limit(10))"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"SinkGlobalParameters = {\r\n",
					"'kv_scope_name':'KeyVaultSecrets',\r\n",
					"'kv_workspace_id':'MDIF - la - workspace - Id',\r\n",
					"'kv_workspace_pk':'MDIF - la - workspace - pk',\r\n",
					"'raw_storage_secret':'',\r\n",
					"'raw_storage_name':'',\r\n",
					"'sink_container_name':'sink',\r\n",
					"'schema_container_name':'schemas',\r\n",
					"'output_container_name':'datatransformation',\r\n",
					"'adls2_storage_account_name':'adlsmetadatadriven2',\r\n",
					"'adls2_blob_secret_name':'MDIF - ADLSmetadatadriven2 - AccountKey',\r\n",
					"'sink_type':'ADLS'\r\n",
					"}\r\n",
					""
				],
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"DataValidationParameters ={\r\n",
					"\t'FwkLogId':5,\r\n",
					"\t'SrcObjectChild':'Product.csv',\r\n",
					"\t'DvMappingId':11,\r\n",
					"\t'SourcePath':'source/jsonfile/Product.json',\r\n",
					"\t'ConvertPath':'Converted/ADLS/XMLFile/books1/2022/01/10/16/',\r\n",
					"\t'SinkFolderPath':'Converted/ADLS/Files/Product/2022/01/07/15/DataValidation/',\r\n",
					"\t'FileName':'',\r\n",
					"\t'RowsRead':'',\r\n",
					"\t'RowsCopied':'',\r\n",
					"\t'SourceType':'ADLS',\r\n",
					"\t'SchemaName':'Files',\r\n",
					"\t'SrcObject':'Books1.xml',\r\n",
					"\t'InstanceURL':'https://adlsmetadatadriven.dfs.core.windows.net/',\r\n",
					"\t'Port':'',\r\n",
					"\t'UserName':'',\r\n",
					"\t'SecretName':'MDIF-ADLS-AccountKey',\r\n",
					"\t'SrcPath':'source/jsonfile',\r\n",
					"\t'IPAddress':'',\r\n",
					"\t'NotebookPath':'/Shared/Metadata Driven Ingestion Framework/Data Validation/NB_01_RowCount',\r\n",
					"\t'FileFormat':'json',\r\n",
					"\t'FunctionName':'RowCount',\r\n",
					"\t'DvMethod':'Databricks',\r\n",
					"\t'ConditionFlag':1,\r\n",
					"\t'EntRunId':'59f03a27-fa44-4c9b-92ec-598d4a808166',\r\n",
					"\t'InputParameter':''\r\n",
					"}\r\n",
					""
				],
				"execution_count": 11
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"exit_doc = {\r\n",
					"        'PRCS_NAME': '',\r\n",
					"        'FILE_NAME': '',\r\n",
					"        'PRCS_EXECUTION_ID': '',\r\n",
					"        'STATUS': '',\r\n",
					"        'STATUS_DESC': '',\r\n",
					"        'EXIT_CODE': '',\r\n",
					"        'VALIDATION_FLAG' : 'No Issue',\r\n",
					"        'EXPECTED_PERIOD_KEY': '',\r\n",
					"        'JOB_START_TIME': '',\r\n",
					"        'JOB_END_TIME': '',\r\n",
					"        'PRCS_TYPE': '',\r\n",
					"        'LOG_PATH': 'log_file_name',\r\n",
					"        'STAGES': '',\r\n",
					"        'SOURCE': {\r\n",
					"          'SOURCE_PATH':'',\r\n",
					"          'SOURCE_ROW_COUNT':'',\r\n",
					"          'SOURCE_AMOUNT':'',\r\n",
					"          'SOURCE_FILE_SIZE':''\r\n",
					"        },\r\n",
					"        'DESTINATION': {\r\n",
					"          'DEST_PATH':'',\r\n",
					"          'DEST_ROW_COUNT':'',\r\n",
					"          'DEST_AMOUNT':'',\r\n",
					"          'DEST_FILE_SIZE':'',\r\n",
					"          'REJECTED_ROW_COUNT':'',\r\n",
					"          'REJECTED_FILE_NAME':''\r\n",
					"        }     \r\n",
					"    }\r\n",
					"\r\n",
					"type(exit_doc)"
				],
				"execution_count": 10
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import sys\r\n",
					"from pyspark.sql import SparkSession\r\n",
					"\r\n",
					"\r\n",
					"token_library = sc._jvm.com.microsoft.azure.synapse.tokenlibrary.TokenLibrary\r\n",
					"\r\n",
					"connection_string = token_library.getSecret(\"kvftr23m5xeeoklumapoc\", \"adlsAccessKey\", \"AzureKeyVaultSpark\")\r\n",
					"print(connection_string)"
				],
				"execution_count": 13
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					""
				],
				"execution_count": null
			}
		]
	}
}